<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bdxh.school.persistence.SchoolPermissionMapper">
    <resultMap id="BaseResultMap" type="com.bdxh.school.entity.SchoolPermission">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="school_id" jdbcType="BIGINT" property="schoolId"/>
        <result column="school_code" jdbcType="CHAR" property="schoolCode"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="parent_ids" jdbcType="VARCHAR" property="parentIds"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="path" jdbcType="VARCHAR" property="path"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="component" jdbcType="VARCHAR" property="component"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="level" jdbcType="INTEGER" property="level"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="operator" jdbcType="BIGINT" property="operator"/>
        <result column="operator_name" jdbcType="VARCHAR" property="operatorName"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>

    <sql id="BaseColumns">
    id,school_id,school_code, parent_id, parent_ids,title, name, path, icon, component, sort, level, type, create_date, update_date, operator,operator_name, remark
    </sql>

    <sql id="BaseColumns1">
    perm.id,perm.school_id,perm.school_code, perm.parent_id, perm.parent_ids,perm.title, perm.name,
    perm.path, perm.icon,perm.component, perm.sort, perm.level, perm.type, perm.create_date, perm.update_date, perm.operator,perm.operator_name, perm.remark
    </sql>

    <select id="findPermissionByRoleId" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumns1"/>
        FROM
        t_school_permission perm
        <where>
            <if test="roleIds !=null">
                AND perm.id IN
                (
                SELECT DISTINCT permission_id
                FROM t_school_role_permission
                WHERE role_id in
                <foreach collection="roleIds" item="roleId" separator="," open="(" close=")">
                    #{roleId,jdbcType=BIGINT}
                </foreach>
                )
            </if>
            <if test="type !=null">
                AND perm.type=#{type,jdbcType=TINYINT}
            </if>
            <if test="schoolId !=null">
                AND perm.school_id=#{schoolId,jdbcType=BIGINT}
            </if>
        </where>
    </select>

    <delete id="batchDelPermissionInIds">
        DELETE
        FROM
        t_school_permission
        WHERE
        id IN
        <foreach collection="ids" item="empId" separator="," open="(" close=")">
            #{empId,jdbcType=BIGINT}
        </foreach>
    </delete>

    <select id="findPermission" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumns"/>
        FROM
        t_school_permission role_id=#{roleId,jdbcType=BIGINT}
    </select>

    <select id="findPermissionByUserId" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumns1"/>
        FROM
        t_school_permission perm
        INNER JOIN t_school_role_permission roleperm ON perm.id=roleperm.permission_id
        INNER JOIN t_school_user_role user_role ON user_role.role_id=roleperm.role_id
        WHERE
        user_role.user_id=#{userId,jdbcType=BIGINT}
    </select>
</mapper>